services:
  postgres:
    image: postgres:15
    container_name: restaurant_postgres_dev
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - strapi-network

  strapi:
    container_name: restaurant_strapi_dev
    build:
      context: ./server
    env_file:
      - .env
    ports:
      - "1337:1337"
    volumes:
      - ./server:/app:delegated
      - /app/node_modules
      - /app/build
      - /app/dist
      - /app/.strapi
    command: npm run develop
    depends_on:
      - postgres
    networks:
      - strapi-network
    restart: unless-stopped

  nextjs:
    container_name: restaurant_nextjs_dev
    build:
      context: ./client
      dockerfile: Dockerfile
      target: development
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app:delegated
      - nextjs_node_modules:/app/node_modules
    command: npm run dev
    depends_on:
      - strapi
    networks:
      - strapi-network
    restart: unless-stopped

volumes:
  postgres_data:
  nextjs_node_modules:

networks:
  strapi-network: